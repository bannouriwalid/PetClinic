pipeline {
    agent any

    tools {
        maven 'maven'
    }

    environment {
        APP_NAME = 'petclinic-app'
        IMAGE_NAME = 'walidbannouri/pet-clinic-app'
        VERSION = "${env.BUILD_ID}"
        KUBE_NAMESPACE = 'petclinic'
        DOCKER_CREDENTIALS_ID = 'docker-hub-credentials'
        KUBECONFIG = "/var/jenkins_home/kubeconfig"
        HELM_CHART_PATH = './petclinic-app'
    }

    stages {

        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/bannouriwalid/PetClinic.git'
            }
        }

        stage('Build & Test') {
            steps {
                sh 'mvn clean install'
            }
            post {
                success {
                    archiveArtifacts artifacts: 'target/*.jar', fingerprint: true
                    junit 'target/surefire-reports/*.xml'
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                sh "docker build -t ${IMAGE_NAME}:${VERSION} ."
                sh "docker tag ${IMAGE_NAME}:${VERSION} ${IMAGE_NAME}:latest"
            }
        }

        stage('Push Docker Image') {
            steps {
                script {
                    docker.withRegistry('https://index.docker.io/v1/', DOCKER_CREDENTIALS_ID) {
                        docker.image("${IMAGE_NAME}:${VERSION}").push()
                        docker.image("${IMAGE_NAME}:latest").push()
                    }
                }
            }
        }

        stage('Prepare K8s Namespace') {
            steps {
                sh '''
                    kubectl --kubeconfig=$KUBECONFIG create namespace $KUBE_NAMESPACE --dry-run=client -o yaml | kubectl --kubeconfig=$KUBECONFIG apply -f -
                '''
            }
        }

        stage('Deploy with Helm') {
            steps {
                script {
                    sh """
                        helm upgrade --install ${APP_NAME} ${HELM_CHART_PATH} \
                          --set image.repository=${IMAGE_NAME} \
                          --set image.tag=${VERSION} \
                          --set service.nodePort=30001 \
                          --namespace ${KUBE_NAMESPACE}
                    """
                }
            }
        }
    }
}
